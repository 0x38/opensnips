version: '2'

volumes: 
    pulsevolume:
services:
        
    ## ===========================================================================================
    ## AUDIOSERVER
    ## ===========================================================================================
    ## OPENSNIPS AUDIOSERVER
    ##audioserver:
        ##depends_on: ['mosquitto']
        ##image: syntithenai/rasa
        ##build: ./docker-images/rasa
        ##working_dir: /opt/snips_services
        ##entrypoint : ["/opt/snips_services/audio_server.py"]
        ###entrypoint: ['/bin/sleep','360000']
        ##volumes_from: ['pulseaudio']
        ##volumes:
            ### HOST MOUNT FOR DEVELOPMENT
            ##- ./docker-images/rasa/snips_services:/opt/snips_services
            
    ## SNIPS AUDIOSERVER
    #audioserver:
        #depends_on: ['mosquitto','pulseaudio']
        #image: syntithenai/snips
        #build: ./docker-images/snips
        #command:  --exclude-components snips-dialogue --exclude-components snips-asr  --exclude-components snips-audio-server --exclude-components snips-analytics --exclude-components snips-tts  --exclude-components snips-hotword --exclude-components  snips-queries  -mqqt mosquitto:1883
        #volumes_from: ['pulseaudio']
    
    
    
    ## ===========================================================================================
    ## HOTWORD SERVER   
    ## ===========================================================================================   
    ## OPENSNIPS HOTWORD SERVER
    ##hotword:
        ##depends_on: ['mosquitto','pulseaudio']
        ###    devices: ['/dev/snd']
        ##build: ./docker-images/rasa
        ##image: syntithenai/rasa
        ##working_dir: /opt/snips_services
        ###entrypoint: ['/bin/sleep','36000']
        ##entrypoint: ['/opt/snips_services/startsnowboy.sh']
        ##volumes_from: ['pulseaudio']
        ##volumes:
            ### dev mode
            ##- ./docker-images/rasa/snips_services:/opt/snips_services
            ###- ./docker-images/snowboy/snips_hotword_snowboy:/opt/snips_hotword_snowboy/
        ##environment:
            ##- MQTT_HOST=mosquitto
            ##- MQTT_PORT=1883
            ##- HOTWORD_MODEL=/opt/snips_hotword_snowboy/resources/snowboy.umdl
            ##- SITE_ID=default
            ##- LISTEN_TO=default
            ##- HOTWORD_ID=snowboy
    
    ## SNIPS HOTWORD SERVER
    #hotword:
        #depends_on: ['mosquitto','pulseaudio']
        #image: syntithenai/snips
        #build: ./docker-images/snips
        #command:   --exclude-components snips-dialogue --exclude-components snips-asr  --exclude-components snips-audio-server --exclude-components snips-analytics --exclude-components snips-tts   --exclude-components  snips-queries  -mqqt mosquitto:1883
        #volumes_from: ['pulseaudio']
    


    ## ===========================================================================================   
    ## TEXT TO SPEECH (TTS) SERVER   
    ## ===========================================================================================   
    ## OPENSNIPS TTS SERVER            
    ##tts:
        ##depends_on: ['mosquitto','pulseaudio']
        ##image: syntithenai/rasa
        ##build: ./docker-images/rasa
        ##working_dir: /opt/snips_services
        ##entrypoint: ['/opt/snips_services/tts_server.py']
        ###entrypoint: ['/bin/sleep','360000']
        ##volumes_from: ['pulseaudio']
        ##volumes:
            ### dev mode
            ##- ./docker-images/rasa/snips_services:/opt/snips_services
    ## SNIPS TTS SERVER
    #tts:
        #depends_on: ['mosquitto','pulseaudio']
        #image: syntithenai/snips
        #build: ./docker-images/snips
        #command:   --exclude-components snips-dialogue --exclude-components snips-asr  --exclude-components snips-audio-server --exclude-components snips-analytics  --exclude-components snips-hotword --exclude-components  snips-queries  -mqqt mosquitto:1883
        #volumes_from: ['pulseaudio']
    
   
    ## ===========================================================================================   
    ## ASR SERVER   
    ## ===========================================================================================   
    # OPENSNIPS ASR SERVER - requires two services, kaldi raw and an mqqt proxy for ASR
    kaldi:
        image: syntithenai/kaldi
        build: ./docker-images/kaldi/
        ports:
            - 8080:80
        entrypoint: ['/opt/delayedstart.sh']
        volumes:
            - ./docker-images/kaldi/delayedstart.sh:/opt/delayedstart.sh
            - /home/stever/projects/kaldi-models/models/test:/opt/models
            - /home/stever/projects/kaldi-models/models/test:/opt/test/models
    
    ## sample web application talking to kaldi server
    ##dictate:
        ##depends_on: ['mosquitto','pulseaudio']
        ##image: syntithenai/rasa
        ##build: ./docker-images/rasa
        ##working_dir: /opt/snips_services/dictate.js
        ##entrypoint: ['python','-m','SimpleHTTPServer']
        ##ports:
            ##- 8000:8000
        ###entrypoint: ['/bin/sleep','360000']
        ##volumes_from: ['pulseaudio']
        ##volumes:
            ### dev mode
            ##- ./docker-images/rasa/snips_services:/opt/snips_services
        
    ##asr:
        ##image: syntithenai/rasa
        ##build: ./docker-images/rasa
        ##working_dir: /opt/snips_services
        ##entrypoint : ["/opt/snips_services/kaldi_server.py"]
        ###entrypoint: ['/bin/sleep','360000']
        ##volumes_from: ['pulseaudio']
        ##volumes:
            ### HOST MOUNT FOR DEVELOPMENT
            ##- ./docker-images/rasa/snips_services:/opt/snips_services

    ## SNIPS ASR SERVER
    #asr:
        #depends_on: ['mosquitto','pulseaudio']
        #image: syntithenai/snips
        #build: ./docker-images/snips
        #command:  --exclude-components snips-dialogue --exclude-components snips-audio-server --exclude-components snips-analytics --exclude-components snips-tts  --exclude-components snips-hotword --exclude-components  snips-queries  -mqqt mosquitto:1883
        #volumes_from: ['pulseaudio']
       
   
   
    ## ===========================================================================================   
    ## NATURAL LANGUAGE UNDERSTANDING (NLU) SERVER   
    ## ===========================================================================================   
    ## OPENSNIPS NLU SERVER            
    ##nlu:
        ##depends_on: ['mosquitto']
        ##image: syntithenai/rasa
        ##build: ./docker-images/rasa
        ##working_dir: /opt/snips_services
        ##environment:
            ###- disable_nlu=no|yes
            ##- disable_core=yes
            ###- mqtt_hostname=mosquitto
            ###- mqtt_port=1883
            ###- nlu_model_path=models/nlu
            ###- snips_assistant_path=models/snips
            ###- snips_user_id=user_Kr5A7b4OD
            ###- core_model_path=models/dialog
            ###- config_file=config/config.json
            ###- domain_file=config/domain.yml
            ###- nlu_training_file=config/nlu.md
            ###- core_training_file=config/stories.md
            ###- lang=en-GB
        ##entrypoint : ["/opt/snips_services/rasa_server.py"]
        ###entrypoint: ['/bin/sleep','360000']
        ##volumes:
            ### HOST MOUNT FOR DEVELOPMENT
            ##- ./docker-images/rasa/snips_services:/opt/snips_services
            ### HOST MOUNT MODELS TO PERSIST BETWEEN UP/DOWN RESTARTS
            ##- /opt/rasa_models:/opt/snips_services/models
            
    ## SNIPS NLU SERVER            
    #nlu:
        #depends_on: ['mosquitto','pulseaudio']
        #image: syntithenai/snips
        #build: ./docker-images/snips
        #command:   --exclude-components snips-dialogue --exclude-components snips-asr  --exclude-components snips-audio-server --exclude-components snips-analytics --exclude-components snips-tts  --exclude-components snips-hotword  -mqqt mosquitto:1883
        #volumes_from: ['pulseaudio']
            


    ## ===========================================================================================   
    ## DIALOG SERVER   
    ## ===========================================================================================   
    ## OPENSNIPS DIALOG SERVER            
    dialog:
        depends_on: ['mosquitto']
        image: syntithenai/rasa
        build: ./docker-images/rasa
        working_dir: /opt/snips_services
        entrypoint : ["/opt/snips_services/dialog_server.py"]
        #entrypoint: ['/bin/sleep','360000']
        volumes:
            # HOST MOUNT FOR DEVELOPMENT
            - ./docker-images/rasa/snips_services:/opt/snips_services
            # HOST MOUNT MODELS TO PERSIST BETWEEN UP/DOWN RESTARTS
            
    ## SNIPS DIALOG SERVER            
    #dialog:
        #depends_on: ['mosquitto','pulseaudio']
        #image: syntithenai/snips
        #build: ./docker-images/snips
        #command:   --exclude-components snips-queries --exclude-components snips-asr  --exclude-components snips-audio-server --exclude-components snips-analytics --exclude-components snips-tts  --exclude-components snips-hotword  -mqqt mosquitto:1883
        

    # ===========================================================================================   
    # ACTION CONTROLLER SERVER   - USING  RASA CORE
    # ===========================================================================================   
    actionhandler:
        depends_on: ['mosquitto']
        image: syntithenai/rasa
        build: ./docker-images/rasa
        working_dir: /opt/snips_services
        environment:
            - disable_nlu=yes
            # - disable_core=yes
            #- mqtt_hostname=mosquitto
            #- mqtt_port=1883
            #- nlu_model_path=models/nlu
            #- snips_assistant_path=models/snips
            #- snips_user_id=user_Kr5A7b4OD
            #- core_model_path=models/dialog
            #- config_file=config/config.json
            #- domain_file=config/domain.yml
            #- nlu_training_file=config/nlu.md
            #- core_training_file=config/stories.md
            #- lang=en-GB
        #entrypoint : ["/opt/snips_services/rasa_server.py"]
        entrypoint: ['/bin/sleep','360000']
        volumes:
            # HOST MOUNT FOR DEVELOPMENT
            - ./docker-images/rasa/snips_services:/opt/snips_services
            # HOST MOUNT MODELS TO PERSIST BETWEEN UP/DOWN RESTARTS
            - /opt/rasa_models:/opt/snips_services/models
    


    
   
    # ===========================================================================================   
    # SNIPS ALL IN ONE
    # ===========================================================================================   
    snips:
        depends_on: ['mosquitto','pulseaudio']
        image: syntithenai/snips
        build: ./docker-images/snips
        command: -mqqt mosquitto:1883 --exclude-components snips-dialogue
        volumes_from: ['pulseaudio']
        #volumes:
            # snips config
            #- ./docker-images/snips/config/assistant:/usr/share/snips/assistant
            #- ./docker-images/snips/snips.toml:/etc/snips.toml
    # ===========================================================================================
    # SOUND SERVER  - FOR SHARED DEVICE ACCESS
    # ===========================================================================================
    pulseaudio:
        image: syntithenai/pulseaudio
        build: ./docker-images/pulseaudio
        #privileged: true
        devices: ['/dev/snd']
        # proxy for host pulseaudio server (my laptop)
        environment: ['PULSE_SERVER=192.168.1.100']
        entrypoint: ['pulseaudio']
        volumes: 
            # pulseaudio access via shared socket
            - pulsevolume:/tmp/pulse
            # proxy for host pulseaudio server auth cookie
            - /home/stever/.config/pulse/cookie:/tmp/cookie

    # ===========================================================================================
    # MQTT MESSAGING QUEUE -  WITH WEBSOCKETS
    # ===========================================================================================
    mosquitto:
        # see docker-images/manifest*.yml for multi arch config
        image: syntithenai/mosquitto
        ports:
            - 1883:1883
            # websockets enabled (for browser clients)
            - 9001:9001 
