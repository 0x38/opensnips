version: '2'

volumes: 
    pulsevolume:
services:
        
    # ===========================================================================================
    # SOUND SERVER  - FOR SHARED DEVICE ACCESS
    ## ===========================================================================================
    #pulseaudio:
        #image: syntithenai/pulseaudio
        #build: ./docker-images/pulseaudio
        ##privileged: true
        #devices: ['/dev/snd']
        ## proxy for host pulseaudio server (my laptop)
        ##environment: ['PULSE_SERVER=192.168.1.100']
        #entrypoint: ['pulseaudio']
        ##entrypoint: ['/bin/sleep','360000']
        #volumes: 
            ## pulseaudio access via shared socket
            #- pulsevolume:/tmp/pulse
            ## proxy for host pulseaudio server auth cookie
            ##- /home/stever/.config/pulse/cookie:/tmp/cookie

    ## ===========================================================================================
    ## MQTT MESSAGING QUEUE -  WITH WEBSOCKETS
    ## ===========================================================================================
    mosquitto:
        # see docker-images/manifest*.yml for multi arch config
        image: syntithenai/mosquitto
        restart: always
        ports:
            - 1883:1883
            # websockets enabled (for browser clients)
            - 9001:9001 
    
    # ===========================================================================================
    # AUDIOSERVER
    # ===========================================================================================
    # OPENSNIPS AUDIOSERVER
    #audioserver:
        #depends_on: ['mosquitto']
        #devices: ['/dev/snd']
        #image: syntithenai/rasa
        #restart: always
        #build: ./docker-images/rasa
        #working_dir: /opt/snips_services
        ##entrypoint : ["/opt/snips_services/audio_server.py"]
        #entrypoint: ['/bin/sleep','360000']
        #volumes:
            ## HOST MOUNT FOR DEVELOPMENT
            #- ./docker-images/rasa/snips_services:/opt/snips_services
            ## Use ALSA for conversion to 16 16000 mono
            #- ./docker-images/rasa/asound.conf:/etc/asound.conf
    
    ## OPENSNIPS AUDIOSERVER VIA PULSEAUDIO ON HOST
    #audioserver:
        #depends_on: ['mosquitto']
        #image: syntithenai/rasa
        #restart: always
        #build: ./docker-images/rasa
        #working_dir: /opt/snips_services
        #entrypoint : ["/opt/snips_services/audio_server.py"]
        ##entrypoint: ['/bin/sleep','360000']
        #environment: 
            #- PULSE_SERVER=192.168.1.100
        #volumes:
            ## HOST MOUNT FOR DEVELOPMENT
            #- ./docker-images/rasa/snips_services:/opt/snips_services
            ## Use PULSE
            #- ./docker-images/rasa/asound-pulse.conf:/etc/asound.conf
            #- ./docker-images/rasa/client.conf:/etc/pulse/client.conf
            ## PULSE COOKIE FROM HOST
            #- /home/stever/.config/pulse/cookie:/tmp/cookie
    
                     
    # SNIPS AUDIOSERVER
    #audioserver:
        #depends_on: ['mosquitto']
        #devices: ['/dev/snd']
        #image: syntithenai/snips
        #restart: always
        #build: ./docker-images/snips
        ##entrypoint: ['/bin/sleep','360000']
        #command:  --exclude-components snips-dialogue --exclude-components snips-asr   --exclude-components snips-analytics --exclude-components snips-tts  --exclude-components snips-hotword --exclude-components  snips-queries  -mqqt mosquitto:1883
        #volumes:
            ## asound as per snips documentation
            #- ./docker-images/rasa/asound.conf:/etc/asound.conf
        

    ## SNIPS AUDIOSERVER via PULSEAUDIO ON HOST
    audioserver:
        depends_on: ['mosquitto']
        image: syntithenai/snips
        restart: always
        build: ./docker-images/snips
        environment: 
            - PULSE_SERVER=192.168.1.100
        #entrypoint: ['/bin/sleep','360000']
        command:  --exclude-components snips-dialogue --exclude-components snips-asr   --exclude-components snips-analytics --exclude-components snips-tts  --exclude-components snips-hotword --exclude-components  snips-queries  -mqqt mosquitto:1883
        volumes:
            # Use PULSE
            - ./docker-images/rasa/asound-pulse.conf:/etc/asound.conf
            - ./docker-images/rasa/client.conf:/etc/pulse/client.conf
            # PULSE COOKIE FROM HOST
            - /home/stever/.config/pulse/cookie:/tmp/cookie
    
        
    
    ## ===========================================================================================
    ## HOTWORD SERVER   
    ## ===========================================================================================   
    # OPENSNIPS HOTWORD SERVER
    hotword:
        depends_on: ['mosquitto','audioserver']
        #    devices: ['/dev/snd']
        build: ./docker-images/rasa
        image: syntithenai/rasa
        restart: always
        working_dir: /opt/snips_services
        #entrypoint: ['/bin/sleep','36000']
        entrypoint: ['/opt/snips_services/startsnowboy.sh']
        volumes:
            # dev mode
            - ./docker-images/rasa/snips_services:/opt/snips_services
            #- ./docker-images/snowboy/snips_hotword_snowboy:/opt/snips_hotword_snowboy/
        environment:
            - mqtt_host=mosquitto
            - mqtt_port=1883
            - hotword_model=/opt/snips_services/resources/snowboy.umdl
            - hotword=snowboy
            - hotword_sensitivity=0.6
            - hotword_listen_to=default
                

    ## SNIPS HOTWORD SERVER
    #hotword:
        #depends_on: ['mosquitto']
        #image: syntithenai/snips
        #restart: always
        #build: ./docker-images/snips
        #command:   --exclude-components snips-dialogue --exclude-components snips-asr  --exclude-components snips-audio-server --exclude-components snips-analytics --exclude-components snips-tts   --exclude-components  snips-queries  -mqqt mosquitto:1883
    


    ## ===========================================================================================   
    ## TEXT TO SPEECH (TTS) SERVER   
    ## ===========================================================================================   
    ## OPENSNIPS TTS SERVER            
    tts:
        depends_on: ['mosquitto']
        image: syntithenai/rasa
        restart: always
        build: ./docker-images/rasa
        working_dir: /opt/snips_services
        entrypoint: ['/opt/snips_services/tts_server.py']
        #entrypoint: ['/bin/sleep','360000']
        volumes:
            # dev mode
            - ./docker-images/rasa/snips_services:/opt/snips_services
            
    ## SNIPS TTS SERVER
    ##tts:
        ##depends_on: ['mosquitto']
        ##image: syntithenai/snips
        ##restart: always
        ##build: ./docker-images/snips
        ##command:   --exclude-components snips-dialogue --exclude-components snips-asr  --exclude-components snips-audio-server --exclude-components snips-analytics  --exclude-components snips-hotword --exclude-components  snips-queries  -mqqt mosquitto:1883
        
   
    ## ===========================================================================================   
    ## ASR SERVER   
    ## ===========================================================================================   
    # OPENSNIPS ASR SERVER - requires two services, kaldi raw and an mqqt proxy for ASR
    kaldi:
        image: syntithenai/kaldi
        restart: always
        build: ./docker-images/kaldi/
        ports:
            - 8080:80
        entrypoint: ['/opt/delayedstart.sh']
        working_dir: /opt
        #entrypoint: ['/bin/sleep','360000']
        volumes:
            - ./docker-images/kaldi/asound-pulse.conf:/etc/asound.conf
            #- /home/stever/projects/kaldi-models/models/test:/opt/models
            #- /home/stever/projects/kaldi-models/models/test:/opt/test/models
    
    # sample web application talking to kaldi server
    dictate:
        depends_on: ['mosquitto']
        image: syntithenai/rasa
        restart: always
        build: ./docker-images/rasa
        working_dir: /opt/snips_services/dictate.js
        entrypoint: ['python','-m','SimpleHTTPServer']
        ports:
            - 8000:8000
        #entrypoint: ['/bin/sleep','360000']
        volumes:
            # dev mode
            - ./docker-images/rasa/snips_services:/opt/snips_services
        
    asr:
        depends_on: ['kaldi']
        image: syntithenai/rasa2
        restart: always
        build: ./docker-images/rasa2
        working_dir: /opt/snips_services
        entrypoint : ["/opt/snips_services/kaldi_server.py"]
        #entrypoint: ['/bin/sleep','360000']
        volumes:
            # HOST MOUNT FOR DEVELOPMENT
            - ./docker-images/rasa/snips_services:/opt/snips_services

    # SNIPS ASR SERVER
    #asr:
        #depends_on: ['mosquitto']
        #image: syntithenai/snips
        #restart: always
        #build: ./docker-images/snips
        #command:  --exclude-components snips-dialogue --exclude-components snips-audio-server --exclude-components snips-analytics --exclude-components snips-tts  --exclude-components snips-hotword --exclude-components  snips-queries  -mqqt mosquitto:1883
        
   
   
    ## ===========================================================================================   
    ## NATURAL LANGUAGE UNDERSTANDING (NLU) SERVER   
    ## ===========================================================================================   
    ## OPENSNIPS NLU SERVER            
    nlu:
        depends_on: ['mosquitto']
        image: syntithenai/rasa2
        restart: always
        build: ./docker-images/rasa2
        working_dir: /opt/snips_services
        environment:
            #- rasa_disable_nlu=no|yes
            - rasa_disable_core=yes
            #- mqtt_hostname=mosquitto
            #- mqtt_port=1883
            #- rasa_nlu_model_path=models/nlu
            #- rasa_snips_assistant_path=models/snips
            #- rasa_snips_user_id=user_Kr5A7b4OD
            #- rasa_core_model_path=models/dialog
            #- rasa_config_file=config/config.json
            #- rasa_domain_file=config/domain.yml
            #- rasa_nlu_training_file=config/nlu.md
            #- rasa_core_training_file=config/stories.md
            #- rasa_lang=en-GB
        entrypoint : ["/opt/snips_services/rasa_server.py"]
        #entrypoint: ['/bin/sleep','360000']
        volumes:
            # HOST MOUNT FOR DEVELOPMENT
            - ./docker-images/rasa/snips_services:/opt/snips_services
            # HOST MOUNT MODELS TO PERSIST BETWEEN UP/DOWN RESTARTS
            - /opt/rasa_models:/opt/snips_services/models
            
    ## SNIPS NLU SERVER            
    ##nlu:
        ##depends_on: ['mosquitto']
        ##image: syntithenai/snips
        ##restart: always
        ##build: ./docker-images/snips
        ##command:   --exclude-components snips-dialogue --exclude-components snips-asr  --exclude-components snips-audio-server --exclude-components snips-analytics --exclude-components snips-tts  --exclude-components snips-hotword  -mqqt mosquitto:1883
        ##volumes_from: ['pulseaudio']
            


    ### ===========================================================================================   
    ### DIALOG SERVER   
    ### ===========================================================================================   
    ### OPENSNIPS DIALOG SERVER            
    dialog:
        depends_on: ['mosquitto']
        image: syntithenai/rasa
        restart: always
        build: ./docker-images/rasa
        working_dir: /opt/snips_services
        entrypoint : ["/opt/snips_services/dialog_server.py"]
        #entrypoint: ['/bin/sleep','360000']
        volumes:
            # HOST MOUNT FOR DEVELOPMENT
            - ./docker-images/rasa/snips_services:/opt/snips_services
            # HOST MOUNT MODELS TO PERSIST BETWEEN UP/DOWN RESTARTS
            
    ## SNIPS DIALOG SERVER            
    #dialog:
        #depends_on: ['mosquitto']
        #image: syntithenai/snips
        #restart: always
        #build: ./docker-images/snips
        #command:   --exclude-components snips-queries --exclude-components snips-asr  --exclude-components snips-audio-server --exclude-components snips-analytics --exclude-components snips-tts  --exclude-components snips-hotword  -mqqt mosquitto:1883
        

    ## ===========================================================================================   
    ## ACTION CONTROLLER SERVER   - USING  RASA CORE
    ## ===========================================================================================   
    actionhandler:
        depends_on: ['mosquitto']
        image: syntithenai/rasa2
        restart: always
        build: ./docker-images/rasa2
        working_dir: /opt/snips_services
        environment:
            - rasa_disable_nlu=yes
            # - rasa_disable_core=yes
            #- mqtt_hostname=mosquitto
            #- mqtt_port=1883
            #- rasa_nlu_model_path=models/nlu
            #- rasa_snips_assistant_path=models/snips
            #- rasa_snips_user_id=user_Kr5A7b4OD
            #- rasa_core_model_path=models/dialog
            #- rasa_config_file=config/config.json
            #- rasa_domain_file=config/domain.yml
            #- rasa_nlu_training_file=config/nlu.md
            #- rasa_core_training_file=config/stories.md
            #- rasa_lang=en-GB
        entrypoint : ["/opt/snips_services/rasa_server.py"]
        #entrypoint: ['/bin/sleep','360000']
        volumes:
            # HOST MOUNT FOR DEVELOPMENT
            - ./docker-images/rasa/snips_services:/opt/snips_services
            # HOST MOUNT MODELS TO PERSIST BETWEEN UP/DOWN RESTARTS
            - /opt/rasa_models:/opt/snips_services/models
            - /home/stever/projects/rasa_core:/opt/rasa_core
    
   


    # ===========================================================================================   
    # SNIPS ALL IN ONE
    # ===========================================================================================   
    #snips:
        #depends_on: ['mosquitto']
        # devices: ['/dev/snd']
        #image: syntithenai/snips
        #restart: always
        #build: ./docker-images/snips
        #command: -mqqt mosquitto:1883 
        #volumes_from: ['pulseaudio']
        ##volumes:
            ## snips config
            ##- ./docker-images/snips/config/assistant:/usr/share/snips/assistant
            ##- ./docker-images/snips/snips.toml:/etc/snips.toml
   
