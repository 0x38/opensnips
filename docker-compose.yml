version: '2'

volumes: 
    pulsevolume:
services:

    pulseaudio:
        image: syntithenai/pulseaudio
        build: ./docker-images/pulseaudio
        #privileged: true
        devices: ['/dev/snd']
        # proxy for host pulseaudio server
        environment: ['PULSE_SERVER=192.168.1.100']
        entrypoint: ['pulseaudio']
        volumes: 
            # pulseaudio access via shared socket
            - pulsevolume:/tmp/pulse
            # proxy for host pulseaudio server auth cookie
            - /home/stever/.config/pulse/cookie:/tmp/cookie

    mosquitto:
        # see docker-compose/manifest*.yml for multi arch config
        image: syntithenai/mosquitto
        ports:
            - 1883:1883
            # websockets enabled (for browser clients)
            - 9001:9001 
        #volumes:
            #- ./data/mosquitto/data:/mqtt/data
            #- ./data/mosquitto/logs:/mqtt/logs
        #restart: always

    audioserver:
        depends_on: ['mosquitto']
        image: syntithenai/rasa
        build: ./docker-images/rasa
        working_dir: /opt/snips_services
        entrypoint : ["/opt/snips_services/audio_server.py"]
        #entrypoint: ['/bin/sleep','360000']
        volumes_from: ['pulseaudio']
        volumes:
            # HOST MOUNT FOR DEVELOPMENT
            - ./docker-images/rasa/snips_services:/opt/snips_services
       
    snowboy:
        depends_on: ['mosquitto','pulseaudio']
        #    devices: ['/dev/snd']
        build: ./docker-images/rasa
        image: syntithenai/rasa
        working_dir: /opt/snips_services
        #entrypoint: ['/bin/sleep','36000']
        entrypoint: ['/opt/snips_services/startsnowboy.sh']
        volumes_from: ['pulseaudio']
        volumes:
            # dev mode
            - ./docker-images/rasa/snips_services:/opt/snips_services
            #- ./docker-images/snowboy/snips_hotword_snowboy:/opt/snips_hotword_snowboy/
            
            
        environment:
            - MQTT_HOST=mosquitto
            - MQTT_PORT=1883
            - HOTWORD_MODEL=/opt/snips_hotword_snowboy/resources/snowboy.umdl
            - SITE_ID=default
            - LISTEN_TO=default
            - HOTWORD_ID=snowboy
            
    tts:
        depends_on: ['mosquitto','pulseaudio']
        image: syntithenai/rasa
        build: ./docker-images/rasa
        working_dir: /opt/snips_services
        entrypoint: ['/opt/snips_services/tts_server.py']
        #entrypoint: ['/bin/sleep','360000']
        volumes_from: ['pulseaudio']
        volumes:
            # dev mode
            - ./docker-images/rasa/snips_services:/opt/snips_services
   
    snips:
        depends_on: ['mosquitto','pulseaudio']
        devices: ['/dev/snd']
        image: syntithenai/snips
        build: ./docker-images/snips
        command: --exclude-components snips-asr  --exclude-components snips-audio-server --exclude-components snips-analytics --exclude-components snips-tts  --exclude-components snips-hotword --exclude-components  snips-queries  -mqqt mosquitto:1883
        volumes_from: ['pulseaudio']
        #volumes:
            # snips config
            #- ./docker-images/snips/config/assistant:/usr/share/snips/assistant
            #- ./docker-images/snips/snips.toml:/etc/snips.toml
         
    # NLU and CORE action/response controller        
    rasa:
        depends_on: ['mosquitto']
        image: syntithenai/rasa
        build: ./docker-images/rasa
        working_dir: /opt/snips_services
        #environment:
            #- disable_nlu=no|yes
            #- disable_core=no|yes
            #- mqtt_hostname=mosquitto
            #- mqtt_port=1883
            #- nlu_model_path=models/nlu
            #- snips_assistant_path=models/snips
            #- snips_user_id=user_Kr5A7b4OD
            #- core_model_path=models/dialog
            #- config_file=config/config.json
            #- domain_file=config/domain.yml
            #- nlu_training_file=config/nlu.md
            #- core_training_file=config/stories.md
            #- lang=en-GB
        entrypoint : ["/opt/snips_services/rasa_server.py"]
        #entrypoint: ['/bin/sleep','360000']
        volumes:
            # HOST MOUNT FOR DEVELOPMENT
            - ./docker-images/rasa/snips_services:/opt/snips_services
            # HOST MOUNT MODELS TO PERSIST BETWEEN UP/DOWN RESTARTS
            - /opt/rasa_models:/opt/snips_services/models
            

    dictate:
        depends_on: ['mosquitto','pulseaudio']
        image: syntithenai/rasa
        build: ./docker-images/rasa
        working_dir: /opt/snips_services/dictate.js
        entrypoint: ['python','-m','SimpleHTTPServer']
        ports:
            - 8000:8000
        #entrypoint: ['/bin/sleep','360000']
        volumes_from: ['pulseaudio']
        volumes:
            # dev mode
            - ./docker-images/rasa/snips_services:/opt/snips_services
   
    # ASR
    kaldi:
        image: syntithenai/kaldi
        build: ./docker-images/kaldi/
        ports:
            - 8080:80
        entrypoint: ['/opt/delayedstart.sh']
        volumes:
            - ./docker-images/kaldi/delayedstart.sh:/opt/delayedstart.sh
            - /home/stever/projects/kaldi-models/models/test:/opt/models
            - /home/stever/projects/kaldi-models/models/test:/opt/test/models
        
    kaldi_mqtt:
        image: syntithenai/rasa
        build: ./docker-images/rasa
        working_dir: /opt/snips_services
        entrypoint : ["/opt/snips_services/kaldi_server.py"]
        #entrypoint: ['/bin/sleep','360000']
        volumes_from: ['pulseaudio']
        volumes:
            # HOST MOUNT FOR DEVELOPMENT
            - ./docker-images/rasa/snips_services:/opt/snips_services
